# This file is generated by /private/tmp/scipy-K7JR/scipy-0.11.0/setup.py
# It contains system_info results at the time of building this package.
__all__ = ["get_info","show"]

amd_info={'libraries': ['amd'], 'library_dirs': ['/usr/local/lib'], 'swig_opts': ['-I/usr/local/include'], 'define_macros': [('SCIPY_AMD_H', None)], 'include_dirs': ['/usr/local/include']}
umfpack_info={'libraries': ['umfpack', 'amd'], 'library_dirs': ['/usr/local/lib'], 'swig_opts': ['-I/usr/local/include', '-I/usr/local/include'], 'define_macros': [('SCIPY_UMFPACK_H', None), ('SCIPY_AMD_H', None)], 'include_dirs': ['/usr/local/include']}
lapack_opt_info={'extra_link_args': ['-Wl,-framework', '-Wl,Accelerate'], 'define_macros': [('NO_ATLAS_INFO', 3)], 'extra_compile_args': ['-msse3']}
blas_opt_info={'extra_link_args': ['-Wl,-framework', '-Wl,Accelerate'], 'define_macros': [('NO_ATLAS_INFO', 3)], 'extra_compile_args': ['-msse3', '-I/System/Library/Frameworks/vecLib.framework/Headers']}

def get_info(name):
    g = globals()
    return g.get(name, g.get(name + "_info", {}))

def show():
    for name,info_dict in globals().items():
        if name[0] == "_" or type(info_dict) is not type({}): continue
        print(name + ":")
        if not info_dict:
            print("  NOT AVAILABLE")
        for k,v in info_dict.items():
            v = str(v)
            if k == "sources" and len(v) > 200:
                v = v[:60] + " ...\n... " + v[-60:]
            print("    %s = %s" % (k,v))
    